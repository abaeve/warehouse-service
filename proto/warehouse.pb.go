// Code generated by protoc-gen-go.
// source: warehouse.proto
// DO NOT EDIT!

/*
Package abaeve_industry is a generated protocol buffer package.

It is generated from these files:
	warehouse.proto

It has these top-level messages:
	WarehouseByEntityRequest
	WarehouseResponse
	Item
	WarehouseIdsResponse
	WarehouseByIdAndTypeId
	WarehouseMoveItemRequest
	WarehouseMoveItemResponse
	WarehouseItemModificationRequest
*/
package abaeve_industry

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import abaeve_common "github.com/abaeve/services-common/proto"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WarehouseByEntityRequest struct {
	EntityId int64 `protobuf:"varint,1,opt,name=EntityId" json:"EntityId,omitempty"`
}

func (m *WarehouseByEntityRequest) Reset()                    { *m = WarehouseByEntityRequest{} }
func (m *WarehouseByEntityRequest) String() string            { return proto.CompactTextString(m) }
func (*WarehouseByEntityRequest) ProtoMessage()               {}
func (*WarehouseByEntityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *WarehouseByEntityRequest) GetEntityId() int64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

type WarehouseResponse struct {
	WarehouseId   int64   `protobuf:"varint,1,opt,name=WarehouseId" json:"WarehouseId,omitempty"`
	WarehouseName string  `protobuf:"bytes,2,opt,name=WarehouseName" json:"WarehouseName,omitempty"`
	Items         []*Item `protobuf:"bytes,3,rep,name=Items" json:"Items,omitempty"`
}

func (m *WarehouseResponse) Reset()                    { *m = WarehouseResponse{} }
func (m *WarehouseResponse) String() string            { return proto.CompactTextString(m) }
func (*WarehouseResponse) ProtoMessage()               {}
func (*WarehouseResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *WarehouseResponse) GetWarehouseId() int64 {
	if m != nil {
		return m.WarehouseId
	}
	return 0
}

func (m *WarehouseResponse) GetWarehouseName() string {
	if m != nil {
		return m.WarehouseName
	}
	return ""
}

func (m *WarehouseResponse) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type Item struct {
	TypeId   int32   `protobuf:"varint,1,opt,name=TypeId" json:"TypeId,omitempty"`
	Price    float32 `protobuf:"fixed32,2,opt,name=Price" json:"Price,omitempty"`
	Quantity int64   `protobuf:"varint,3,opt,name=Quantity" json:"Quantity,omitempty"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Item) GetTypeId() int32 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

func (m *Item) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Item) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

type WarehouseIdsResponse struct {
	WarehouseIds   []int64 `protobuf:"varint,1,rep,packed,name=WarehouseIds" json:"WarehouseIds,omitempty"`
	WarehouseNames []int64 `protobuf:"varint,2,rep,packed,name=WarehouseNames" json:"WarehouseNames,omitempty"`
}

func (m *WarehouseIdsResponse) Reset()                    { *m = WarehouseIdsResponse{} }
func (m *WarehouseIdsResponse) String() string            { return proto.CompactTextString(m) }
func (*WarehouseIdsResponse) ProtoMessage()               {}
func (*WarehouseIdsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *WarehouseIdsResponse) GetWarehouseIds() []int64 {
	if m != nil {
		return m.WarehouseIds
	}
	return nil
}

func (m *WarehouseIdsResponse) GetWarehouseNames() []int64 {
	if m != nil {
		return m.WarehouseNames
	}
	return nil
}

type WarehouseByIdAndTypeId struct {
	WarehouseId int64 `protobuf:"varint,1,opt,name=WarehouseId" json:"WarehouseId,omitempty"`
	TypeId      int32 `protobuf:"varint,2,opt,name=TypeId" json:"TypeId,omitempty"`
}

func (m *WarehouseByIdAndTypeId) Reset()                    { *m = WarehouseByIdAndTypeId{} }
func (m *WarehouseByIdAndTypeId) String() string            { return proto.CompactTextString(m) }
func (*WarehouseByIdAndTypeId) ProtoMessage()               {}
func (*WarehouseByIdAndTypeId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *WarehouseByIdAndTypeId) GetWarehouseId() int64 {
	if m != nil {
		return m.WarehouseId
	}
	return 0
}

func (m *WarehouseByIdAndTypeId) GetTypeId() int32 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

type WarehouseMoveItemRequest struct {
	SourceWarehouse      int64 `protobuf:"varint,1,opt,name=SourceWarehouse" json:"SourceWarehouse,omitempty"`
	DestinationWarehouse int64 `protobuf:"varint,2,opt,name=DestinationWarehouse" json:"DestinationWarehouse,omitempty"`
	TypeId               int32 `protobuf:"varint,3,opt,name=TypeId" json:"TypeId,omitempty"`
	Quantity             int64 `protobuf:"varint,4,opt,name=Quantity" json:"Quantity,omitempty"`
}

func (m *WarehouseMoveItemRequest) Reset()                    { *m = WarehouseMoveItemRequest{} }
func (m *WarehouseMoveItemRequest) String() string            { return proto.CompactTextString(m) }
func (*WarehouseMoveItemRequest) ProtoMessage()               {}
func (*WarehouseMoveItemRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *WarehouseMoveItemRequest) GetSourceWarehouse() int64 {
	if m != nil {
		return m.SourceWarehouse
	}
	return 0
}

func (m *WarehouseMoveItemRequest) GetDestinationWarehouse() int64 {
	if m != nil {
		return m.DestinationWarehouse
	}
	return 0
}

func (m *WarehouseMoveItemRequest) GetTypeId() int32 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

func (m *WarehouseMoveItemRequest) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

type WarehouseMoveItemResponse struct {
	Response *abaeve_common.ServiceResponseDetail `protobuf:"bytes,1,opt,name=Response" json:"Response,omitempty"`
}

func (m *WarehouseMoveItemResponse) Reset()                    { *m = WarehouseMoveItemResponse{} }
func (m *WarehouseMoveItemResponse) String() string            { return proto.CompactTextString(m) }
func (*WarehouseMoveItemResponse) ProtoMessage()               {}
func (*WarehouseMoveItemResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *WarehouseMoveItemResponse) GetResponse() *abaeve_common.ServiceResponseDetail {
	if m != nil {
		return m.Response
	}
	return nil
}

type WarehouseItemModificationRequest struct {
	WarehouseId int64     `protobuf:"varint,1,opt,name=WarehouseId" json:"WarehouseId,omitempty"`
	ItemId      []int32   `protobuf:"varint,2,rep,packed,name=ItemId" json:"ItemId,omitempty"`
	Quantity    []int64   `protobuf:"varint,3,rep,packed,name=Quantity" json:"Quantity,omitempty"`
	Price       []float32 `protobuf:"fixed32,4,rep,packed,name=Price" json:"Price,omitempty"`
}

func (m *WarehouseItemModificationRequest) Reset()         { *m = WarehouseItemModificationRequest{} }
func (m *WarehouseItemModificationRequest) String() string { return proto.CompactTextString(m) }
func (*WarehouseItemModificationRequest) ProtoMessage()    {}
func (*WarehouseItemModificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7}
}

func (m *WarehouseItemModificationRequest) GetWarehouseId() int64 {
	if m != nil {
		return m.WarehouseId
	}
	return 0
}

func (m *WarehouseItemModificationRequest) GetItemId() []int32 {
	if m != nil {
		return m.ItemId
	}
	return nil
}

func (m *WarehouseItemModificationRequest) GetQuantity() []int64 {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *WarehouseItemModificationRequest) GetPrice() []float32 {
	if m != nil {
		return m.Price
	}
	return nil
}

func init() {
	proto.RegisterType((*WarehouseByEntityRequest)(nil), "abaeve.industry.WarehouseByEntityRequest")
	proto.RegisterType((*WarehouseResponse)(nil), "abaeve.industry.WarehouseResponse")
	proto.RegisterType((*Item)(nil), "abaeve.industry.Item")
	proto.RegisterType((*WarehouseIdsResponse)(nil), "abaeve.industry.WarehouseIdsResponse")
	proto.RegisterType((*WarehouseByIdAndTypeId)(nil), "abaeve.industry.WarehouseByIdAndTypeId")
	proto.RegisterType((*WarehouseMoveItemRequest)(nil), "abaeve.industry.WarehouseMoveItemRequest")
	proto.RegisterType((*WarehouseMoveItemResponse)(nil), "abaeve.industry.WarehouseMoveItemResponse")
	proto.RegisterType((*WarehouseItemModificationRequest)(nil), "abaeve.industry.WarehouseItemModificationRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Publisher API

type Publisher interface {
	Publish(ctx context.Context, msg interface{}, opts ...client.PublishOption) error
}

type publisher struct {
	c     client.Client
	topic string
}

func (p *publisher) Publish(ctx context.Context, msg interface{}, opts ...client.PublishOption) error {
	return p.c.Publish(ctx, p.c.NewPublication(p.topic, msg), opts...)
}

func NewPublisher(topic string, c client.Client) Publisher {
	if c == nil {
		c = client.NewClient()
	}
	return &publisher{c, topic}
}

// Subscriber API

func RegisterSubscriber(topic string, s server.Server, h interface{}, opts ...server.SubscriberOption) error {
	return s.Subscribe(s.NewSubscriber(topic, h, opts...))
}

// Client API for WarehouseQuery service

type WarehouseQueryClient interface {
	GetWarehouse(ctx context.Context, in *WarehouseByEntityRequest, opts ...client.CallOption) (*WarehouseResponse, error)
	FindWarehousesForEntity(ctx context.Context, in *WarehouseByEntityRequest, opts ...client.CallOption) (*WarehouseIdsResponse, error)
	FindByWarehouseIdAndTypeId(ctx context.Context, in *WarehouseByIdAndTypeId, opts ...client.CallOption) (*Item, error)
}

type warehouseQueryClient struct {
	c           client.Client
	serviceName string
}

func NewWarehouseQueryClient(serviceName string, c client.Client) WarehouseQueryClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "abaeve.industry"
	}
	return &warehouseQueryClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *warehouseQueryClient) GetWarehouse(ctx context.Context, in *WarehouseByEntityRequest, opts ...client.CallOption) (*WarehouseResponse, error) {
	req := c.c.NewRequest(c.serviceName, "WarehouseQuery.GetWarehouse", in)
	out := new(WarehouseResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warehouseQueryClient) FindWarehousesForEntity(ctx context.Context, in *WarehouseByEntityRequest, opts ...client.CallOption) (*WarehouseIdsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "WarehouseQuery.FindWarehousesForEntity", in)
	out := new(WarehouseIdsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warehouseQueryClient) FindByWarehouseIdAndTypeId(ctx context.Context, in *WarehouseByIdAndTypeId, opts ...client.CallOption) (*Item, error) {
	req := c.c.NewRequest(c.serviceName, "WarehouseQuery.FindByWarehouseIdAndTypeId", in)
	out := new(Item)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for WarehouseQuery service

type WarehouseQueryHandler interface {
	GetWarehouse(context.Context, *WarehouseByEntityRequest, *WarehouseResponse) error
	FindWarehousesForEntity(context.Context, *WarehouseByEntityRequest, *WarehouseIdsResponse) error
	FindByWarehouseIdAndTypeId(context.Context, *WarehouseByIdAndTypeId, *Item) error
}

func RegisterWarehouseQueryHandler(s server.Server, hdlr WarehouseQueryHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&WarehouseQuery{hdlr}, opts...))
}

type WarehouseQuery struct {
	WarehouseQueryHandler
}

func (h *WarehouseQuery) GetWarehouse(ctx context.Context, in *WarehouseByEntityRequest, out *WarehouseResponse) error {
	return h.WarehouseQueryHandler.GetWarehouse(ctx, in, out)
}

func (h *WarehouseQuery) FindWarehousesForEntity(ctx context.Context, in *WarehouseByEntityRequest, out *WarehouseIdsResponse) error {
	return h.WarehouseQueryHandler.FindWarehousesForEntity(ctx, in, out)
}

func (h *WarehouseQuery) FindByWarehouseIdAndTypeId(ctx context.Context, in *WarehouseByIdAndTypeId, out *Item) error {
	return h.WarehouseQueryHandler.FindByWarehouseIdAndTypeId(ctx, in, out)
}

// Client API for WarehouseMaintenance service

type WarehouseMaintenanceClient interface {
	MoveItem(ctx context.Context, in *WarehouseMoveItemRequest, opts ...client.CallOption) (*WarehouseMoveItemResponse, error)
	ItemsConsumed(ctx context.Context, in *WarehouseItemModificationRequest, opts ...client.CallOption) (*abaeve_common.ServiceResponseDetail, error)
	ItemsPurchased(ctx context.Context, in *WarehouseItemModificationRequest, opts ...client.CallOption) (*abaeve_common.ServiceResponseDetail, error)
}

type warehouseMaintenanceClient struct {
	c           client.Client
	serviceName string
}

func NewWarehouseMaintenanceClient(serviceName string, c client.Client) WarehouseMaintenanceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "abaeve.industry"
	}
	return &warehouseMaintenanceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *warehouseMaintenanceClient) MoveItem(ctx context.Context, in *WarehouseMoveItemRequest, opts ...client.CallOption) (*WarehouseMoveItemResponse, error) {
	req := c.c.NewRequest(c.serviceName, "WarehouseMaintenance.MoveItem", in)
	out := new(WarehouseMoveItemResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warehouseMaintenanceClient) ItemsConsumed(ctx context.Context, in *WarehouseItemModificationRequest, opts ...client.CallOption) (*abaeve_common.ServiceResponseDetail, error) {
	req := c.c.NewRequest(c.serviceName, "WarehouseMaintenance.ItemsConsumed", in)
	out := new(abaeve_common.ServiceResponseDetail)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warehouseMaintenanceClient) ItemsPurchased(ctx context.Context, in *WarehouseItemModificationRequest, opts ...client.CallOption) (*abaeve_common.ServiceResponseDetail, error) {
	req := c.c.NewRequest(c.serviceName, "WarehouseMaintenance.ItemsPurchased", in)
	out := new(abaeve_common.ServiceResponseDetail)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for WarehouseMaintenance service

type WarehouseMaintenanceHandler interface {
	MoveItem(context.Context, *WarehouseMoveItemRequest, *WarehouseMoveItemResponse) error
	ItemsConsumed(context.Context, *WarehouseItemModificationRequest, *abaeve_common.ServiceResponseDetail) error
	ItemsPurchased(context.Context, *WarehouseItemModificationRequest, *abaeve_common.ServiceResponseDetail) error
}

func RegisterWarehouseMaintenanceHandler(s server.Server, hdlr WarehouseMaintenanceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&WarehouseMaintenance{hdlr}, opts...))
}

type WarehouseMaintenance struct {
	WarehouseMaintenanceHandler
}

func (h *WarehouseMaintenance) MoveItem(ctx context.Context, in *WarehouseMoveItemRequest, out *WarehouseMoveItemResponse) error {
	return h.WarehouseMaintenanceHandler.MoveItem(ctx, in, out)
}

func (h *WarehouseMaintenance) ItemsConsumed(ctx context.Context, in *WarehouseItemModificationRequest, out *abaeve_common.ServiceResponseDetail) error {
	return h.WarehouseMaintenanceHandler.ItemsConsumed(ctx, in, out)
}

func (h *WarehouseMaintenance) ItemsPurchased(ctx context.Context, in *WarehouseItemModificationRequest, out *abaeve_common.ServiceResponseDetail) error {
	return h.WarehouseMaintenanceHandler.ItemsPurchased(ctx, in, out)
}

func init() { proto.RegisterFile("warehouse.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 585 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x8e, 0xed, 0xb6, 0x2a, 0x93, 0xb6, 0x11, 0xab, 0x50, 0x8c, 0x4f, 0xd6, 0xaa, 0x40, 0x00,
	0x91, 0x88, 0x80, 0x38, 0x43, 0x29, 0x45, 0x39, 0x04, 0xa5, 0x2e, 0x12, 0x27, 0x40, 0x8e, 0xbd,
	0x90, 0x05, 0xbc, 0x1b, 0xbc, 0xeb, 0x20, 0xbf, 0x01, 0x27, 0x9e, 0x84, 0x87, 0xe0, 0x21, 0x78,
	0x20, 0xe4, 0xbf, 0xf5, 0xc6, 0x24, 0x21, 0x1c, 0xb8, 0x79, 0x66, 0xbf, 0xd9, 0x99, 0xef, 0xdb,
	0x6f, 0x12, 0xe8, 0x7c, 0xf5, 0x63, 0x32, 0xe3, 0x89, 0x20, 0xfd, 0x79, 0xcc, 0x25, 0x47, 0x1d,
	0x7f, 0xea, 0x93, 0x05, 0xe9, 0x53, 0x16, 0x26, 0x42, 0xc6, 0xa9, 0xf3, 0xe8, 0x03, 0x95, 0xb3,
	0x64, 0xda, 0x0f, 0x78, 0x34, 0x28, 0xce, 0x06, 0x82, 0xc4, 0x0b, 0x1a, 0x10, 0x71, 0x3f, 0xe0,
	0x51, 0xc4, 0xd9, 0x20, 0xaf, 0x1c, 0x14, 0x41, 0x71, 0x0d, 0x7e, 0x0c, 0xf6, 0xeb, 0xea, 0xe6,
	0xd3, 0xf4, 0x39, 0x93, 0x54, 0xa6, 0x1e, 0xf9, 0x92, 0x10, 0x21, 0x91, 0x03, 0xfb, 0x45, 0x62,
	0x14, 0xda, 0x86, 0x6b, 0xf4, 0x2c, 0x4f, 0xc5, 0xf8, 0x9b, 0x01, 0x57, 0x55, 0xa1, 0x47, 0xc4,
	0x9c, 0x33, 0x41, 0x90, 0x0b, 0x6d, 0x95, 0x54, 0x45, 0x7a, 0x0a, 0x9d, 0xc0, 0xa1, 0x0a, 0x5f,
	0xfa, 0x11, 0xb1, 0x4d, 0xd7, 0xe8, 0x5d, 0xf1, 0x96, 0x93, 0xe8, 0x1e, 0xec, 0x8e, 0x24, 0x89,
	0x84, 0x6d, 0xb9, 0x56, 0xaf, 0x3d, 0xbc, 0xd6, 0x6f, 0x90, 0xed, 0x67, 0xa7, 0x5e, 0x81, 0xc1,
	0x13, 0xd8, 0xc9, 0x3e, 0xd0, 0x31, 0xec, 0xbd, 0x4a, 0xe7, 0x55, 0xdf, 0x5d, 0xaf, 0x8c, 0x50,
	0x17, 0x76, 0x27, 0x31, 0x0d, 0x8a, 0x56, 0xa6, 0x57, 0x04, 0x19, 0xb9, 0x8b, 0xc4, 0xcf, 0xe9,
	0xd8, 0x56, 0x41, 0xae, 0x8a, 0xf1, 0x14, 0xba, 0xda, 0xcc, 0x42, 0xd1, 0xc3, 0x70, 0xa0, 0xe7,
	0x6d, 0xc3, 0xb5, 0x7a, 0x96, 0xb7, 0x94, 0x43, 0xb7, 0xe0, 0x68, 0x89, 0x8b, 0xb0, 0xcd, 0x1c,
	0xd5, 0xc8, 0x62, 0x0f, 0x8e, 0x35, 0xe1, 0x47, 0xe1, 0x53, 0x16, 0x96, 0xf3, 0xfe, 0x5d, 0xc4,
	0x9a, 0xa9, 0xa9, 0x33, 0xc5, 0x3f, 0x0c, 0xed, 0x35, 0xc7, 0x7c, 0x41, 0x72, 0x99, 0xca, 0xd7,
	0xec, 0x41, 0xe7, 0x92, 0x27, 0x71, 0x40, 0x14, 0xa2, 0xbc, 0xba, 0x99, 0x46, 0x43, 0xe8, 0x9e,
	0x11, 0x21, 0x29, 0xf3, 0x25, 0xe5, 0xac, 0x86, 0x9b, 0x39, 0x7c, 0xe5, 0x99, 0x36, 0x92, 0xb5,
	0x24, 0xbe, 0x2e, 0xf3, 0x4e, 0x43, 0xe6, 0x37, 0x70, 0x63, 0xc5, 0xb4, 0xa5, 0xd6, 0x4f, 0x60,
	0xbf, 0xfa, 0xce, 0xe7, 0x6c, 0x0f, 0x4f, 0x2a, 0x17, 0x94, 0x06, 0xbe, 0x2c, 0xdc, 0x5d, 0xa1,
	0xce, 0x88, 0xf4, 0xe9, 0x67, 0x4f, 0x55, 0xe1, 0xef, 0x06, 0xb8, 0xb5, 0x6a, 0x92, 0x44, 0x63,
	0x1e, 0xd2, 0xf7, 0x34, 0xc8, 0x27, 0xaf, 0x54, 0xd9, 0x4a, 0xec, 0xac, 0x38, 0x17, 0xdb, 0xca,
	0x98, 0x15, 0x51, 0xc3, 0x40, 0x96, 0xce, 0xac, 0xb6, 0xdc, 0x8e, 0x6b, 0x29, 0xcb, 0x0d, 0x7f,
	0x9a, 0x9a, 0x37, 0x2e, 0x12, 0x12, 0xa7, 0xe8, 0x1d, 0x1c, 0xbc, 0x20, 0xb2, 0x96, 0xf1, 0xce,
	0x1f, 0x4e, 0x5f, 0xb7, 0x9d, 0x0e, 0x5e, 0x0f, 0x55, 0x12, 0xb4, 0x50, 0x04, 0xd7, 0xcf, 0x29,
	0x0b, 0xd5, 0x91, 0x38, 0xe7, 0x71, 0x71, 0xcf, 0xbf, 0xf4, 0xba, 0xb9, 0x1e, 0xaa, 0xed, 0x07,
	0x6e, 0xa1, 0xb7, 0xe0, 0x64, 0xed, 0x4e, 0x53, 0xed, 0xbc, 0x76, 0xf6, 0xed, 0x4d, 0x1d, 0x35,
	0xa0, 0xb3, 0x7a, 0xe1, 0x71, 0x6b, 0xf8, 0xcb, 0xd4, 0x56, 0x73, 0xec, 0x53, 0x26, 0x09, 0xf3,
	0x59, 0x40, 0x50, 0x00, 0xfb, 0x95, 0x85, 0x36, 0x11, 0x6b, 0x2c, 0x85, 0x73, 0x77, 0x1b, 0xa8,
	0x62, 0xf7, 0x11, 0x0e, 0xf3, 0x9f, 0x9c, 0x67, 0x9c, 0x89, 0x24, 0x22, 0x21, 0x7a, 0xb0, 0x41,
	0x97, 0xd5, 0x86, 0x73, 0xb6, 0x72, 0x31, 0x6e, 0xa1, 0x4f, 0x70, 0x94, 0xf7, 0x9a, 0x24, 0x71,
	0x30, 0xf3, 0xc5, 0x7f, 0x6d, 0x36, 0xdd, 0xcb, 0xff, 0x0c, 0x1e, 0xfe, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0x96, 0x49, 0x4d, 0xed, 0x66, 0x06, 0x00, 0x00,
}
